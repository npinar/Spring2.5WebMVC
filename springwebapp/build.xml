<?xml version="1.0"?>
<project name="springwebapp" basedir="." default="usage">
    <property file="build.properties"/>

    <property name="src.dir" value="src"/>
    <property name="web.dir" value="WebContent"/>
    <property name="build.dir" value="${web.dir}/WEB-INF/classes"/>
	<property name="test.dir" value="test"/>
    <property name="name" value="springwebapp"/>

    <path id="master-classpath">
        <fileset dir="${web.dir}/WEB-INF/lib">
            <include name="*.jar"/>
        </fileset>
        <!-- need the servlet API classes: -->
        <fileset dir="${appserver.lib}">
            <include name="servlet*.jar"/>
        </fileset>
        <pathelement path="${build.dir}"/>
    </path>

    <target name="usage">
        <echo message=""/>
        <echo message="${name} build file"/>
        <echo message="-----------------------------------"/>
        <echo message=""/>
        <echo message="Available targets are:"/>
        <echo message=""/>
        <echo message="build     --> Build the application"/>
        <echo message="deploy    --> Deploy application as directory"/>
        <echo message="deploywar --> Deploy application as a WAR file"/>
        <echo message="install   --> Install application in Tomcat"/>
        <echo message="reload    --> Reload application in Tomcat"/>
        <echo message="start     --> Start Tomcat application"/>
        <echo message="stop      --> Stop Tomcat application"/>
        <echo message="list      --> List Tomcat applications"/>
        <echo message=""/>
    </target>

    <target name="build" description="Compile main source tree java files">
        <mkdir dir="${build.dir}"/>
        <javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
               deprecation="false" optimize="false" failonerror="true">
            <src path="${src.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
    </target>

    <target name="deploy" depends="build" description="Deploy application">
        <copy todir="${deploy.path}/${name}" preservelastmodified="true">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
    </target>

    <target name="deploywar" depends="build" description="Deploy application as a WAR file">
        <war destfile="${name}.war"
             webxml="${web.dir}/WEB-INF/web.xml">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            </fileset>
        </war>
        <copy todir="${deploy.path}" preservelastmodified="true">
            <fileset dir=".">
                <include name="*.war"/>
            </fileset>
        </copy>
    </target>
    
	<!-- Tomcat tasks -->
	<!-- make sure your tomcat is running before executing any of these tasks -->
	
    <path id="catalina-ant-classpath">
        <fileset dir="${appserver.lib}">
            <include name="catalina-ant.jar"/>
        </fileset>
    </path>

	<!-- task to install the web application -->
    <taskdef name="install" classname="org.apache.catalina.ant.InstallTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
	
	<!-- task to reload the web application -->
    <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
	
	<!-- listing all the running applications on tomcat -->
    <taskdef name="list" classname="org.apache.catalina.ant.ListTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
	
	<!-- task to start the web application -->
    <taskdef name="start" classname="org.apache.catalina.ant.StartTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
	
	<!--task to stop a web application -->
    <taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>

    <target name="install" description="Install web application in Tomcat">
        <install url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"
                 war="${name}"/>
    </target>

    <target name="reload" description="Reload web application in Tomcat">
        <reload url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="start" description="Start Tomcat web application">
        <start url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="stop" description="Stop Tomcat web application">
        <stop url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="list" description="List running Tomcat applications">
        <list url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"/>
    </target>
	
	<!-- run junit test cases -->
	<target name="buildtests" description="Compile test tree java files">
	        <mkdir dir="${build.dir}"/>
	        <javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
	            deprecation="false" optimize="false" failonerror="true">
	            <src path="${test.dir}"/>
	            <classpath refid="master-classpath"/>
	        </javac>
	</target>
	
	<target name="tests" depends="build, buildtests" description="Run tests">
	        <junit printsummary="on"
	            fork="false"
	            haltonfailure="false"
	            failureproperty="tests.failed"
	            showoutput="true">
	            <classpath refid="master-classpath"/>
	            <formatter type="brief" usefile="false"/>
	            
	            <batchtest>
	                <fileset dir="${build.dir}">
	                    <include name="**/*Tests.*"/>
	                </fileset>
	            </batchtest>
	            
	        </junit>
	        
	        <fail if="tests.failed">
	            tests.failed=${tests.failed}
	            ***********************************************************
	            ***********  One or more tests failed!   ******************
	            ***********************************************************
	        </fail>
	    </target>
	
	 <target name="clean" description="Clean output directories">
	        <delete>
	            <fileset dir="${build.dir}">
	                <include name="**/*.class"/>
	            </fileset>
	        </delete>
	    </target>

	    <target name="undeploy" description="Un-Deploy application">
	        <delete>
	            <fileset dir="${deploy.path}/${name}">
	                <include name="**/*.*"/>
	            </fileset>
	        </delete>
	    </target>

</project>